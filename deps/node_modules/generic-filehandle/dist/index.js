"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  open: true,
  fromUrl: true,
  LocalFile: true,
  RemoteFile: true,
  BlobFile: true
};
exports.open = open;
exports.fromUrl = fromUrl;
Object.defineProperty(exports, "LocalFile", {
  enumerable: true,
  get: function get() {
    return _localFile.default;
  }
});
Object.defineProperty(exports, "RemoteFile", {
  enumerable: true,
  get: function get() {
    return _remoteFile.default;
  }
});
Object.defineProperty(exports, "BlobFile", {
  enumerable: true,
  get: function get() {
    return _blobFile.default;
  }
});

var _localFile = _interopRequireDefault(require("./localFile"));

var _remoteFile = _interopRequireDefault(require("./remoteFile"));

var _blobFile = _interopRequireDefault(require("./blobFile"));

var _filehandle = require("./filehandle");

Object.keys(_filehandle).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _filehandle[key];
    }
  });
});

function fromUrl(source) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new _remoteFile.default(source, opts);
}

function open(maybeUrl, maybePath, maybeFilehandle) {
  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  if (maybeFilehandle !== undefined) return maybeFilehandle;
  if (maybeUrl !== undefined) return fromUrl(maybeUrl, opts);
  if (maybePath !== undefined) return new _localFile.default(maybePath, opts);
  throw new Error('no url, path, or filehandle provided, cannot open');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJmcm9tVXJsIiwic291cmNlIiwib3B0cyIsIlJlbW90ZUZpbGUiLCJvcGVuIiwibWF5YmVVcmwiLCJtYXliZVBhdGgiLCJtYXliZUZpbGVoYW5kbGUiLCJ1bmRlZmluZWQiLCJMb2NhbEZpbGUiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQSxTQUFTQSxPQUFULENBQWlCQyxNQUFqQixFQUFrRjtBQUFBLE1BQWpEQyxJQUFpRCx1RUFBdkIsRUFBdUI7QUFDaEYsU0FBTyxJQUFJQyxtQkFBSixDQUFlRixNQUFmLEVBQXVCQyxJQUF2QixDQUFQO0FBQ0Q7O0FBQ0QsU0FBU0UsSUFBVCxDQUNFQyxRQURGLEVBRUVDLFNBRkYsRUFHRUMsZUFIRixFQUtxQjtBQUFBLE1BRG5CTCxJQUNtQix1RUFETyxFQUNQO0FBQ25CLE1BQUlLLGVBQWUsS0FBS0MsU0FBeEIsRUFBbUMsT0FBT0QsZUFBUDtBQUNuQyxNQUFJRixRQUFRLEtBQUtHLFNBQWpCLEVBQTRCLE9BQU9SLE9BQU8sQ0FBQ0ssUUFBRCxFQUFXSCxJQUFYLENBQWQ7QUFDNUIsTUFBSUksU0FBUyxLQUFLRSxTQUFsQixFQUE2QixPQUFPLElBQUlDLGtCQUFKLENBQWNILFNBQWQsRUFBeUJKLElBQXpCLENBQVA7QUFDN0IsUUFBTSxJQUFJUSxLQUFKLENBQVUsbURBQVYsQ0FBTjtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvY2FsRmlsZSBmcm9tICcuL2xvY2FsRmlsZSdcbmltcG9ydCBSZW1vdGVGaWxlIGZyb20gJy4vcmVtb3RlRmlsZSdcbmltcG9ydCBCbG9iRmlsZSBmcm9tICcuL2Jsb2JGaWxlJ1xuaW1wb3J0IHsgR2VuZXJpY0ZpbGVoYW5kbGUsIEZpbGVoYW5kbGVPcHRpb25zIH0gZnJvbSAnLi9maWxlaGFuZGxlJ1xuZXhwb3J0ICogZnJvbSAnLi9maWxlaGFuZGxlJ1xuXG5mdW5jdGlvbiBmcm9tVXJsKHNvdXJjZTogc3RyaW5nLCBvcHRzOiBGaWxlaGFuZGxlT3B0aW9ucyA9IHt9KTogR2VuZXJpY0ZpbGVoYW5kbGUge1xuICByZXR1cm4gbmV3IFJlbW90ZUZpbGUoc291cmNlLCBvcHRzKVxufVxuZnVuY3Rpb24gb3BlbihcbiAgbWF5YmVVcmw/OiBzdHJpbmcsXG4gIG1heWJlUGF0aD86IHN0cmluZyxcbiAgbWF5YmVGaWxlaGFuZGxlPzogR2VuZXJpY0ZpbGVoYW5kbGUsXG4gIG9wdHM6IEZpbGVoYW5kbGVPcHRpb25zID0ge30sXG4pOiBHZW5lcmljRmlsZWhhbmRsZSB7XG4gIGlmIChtYXliZUZpbGVoYW5kbGUgIT09IHVuZGVmaW5lZCkgcmV0dXJuIG1heWJlRmlsZWhhbmRsZVxuICBpZiAobWF5YmVVcmwgIT09IHVuZGVmaW5lZCkgcmV0dXJuIGZyb21VcmwobWF5YmVVcmwsIG9wdHMpXG4gIGlmIChtYXliZVBhdGggIT09IHVuZGVmaW5lZCkgcmV0dXJuIG5ldyBMb2NhbEZpbGUobWF5YmVQYXRoLCBvcHRzKVxuICB0aHJvdyBuZXcgRXJyb3IoJ25vIHVybCwgcGF0aCwgb3IgZmlsZWhhbmRsZSBwcm92aWRlZCwgY2Fubm90IG9wZW4nKVxufVxuXG5leHBvcnQgeyBvcGVuLCBmcm9tVXJsLCBSZW1vdGVGaWxlLCBMb2NhbEZpbGUsIEJsb2JGaWxlIH1cbiJdfQ==